{"version":3,"sources":["components/Red.js","components/overdue.js","components/estimates.js","components/reopenedtickets.js","components/pddt.js","components/handle.js","components/Deadlines.js","App.js","serviceWorker.js","index.js"],"names":["Red","color","className","style","backgroundColor","Deadlines","center","responsive","textWhite","overdue","Task","Deadline","employee","map","em","Handle","padding","display","justifyContent","alignContent","fontWeight","fontSize","marginTop","marginBottom","data","labels","datasets","label","borderColor","borderWidth","options","plugins","datalabels","align","anchor","title","text","legend","position","boxWidth","scales","xAxes","barPercentage","categoryPercentage","gridLines","yAxes","ticks","beginAtZero","maintainAspectRatio","clip","flexDirection","alignItems","height","width","src","marginLeft","Pddt","state","strokeWidth","value","styles","buildStyles","rotation","strokeLinecap","textSize","pathTransitionDuration","trailColor","pathColor","textColor","fillColor","opacity","scaleLabel","Workload","class","role","aria-valuenow","aria-valuemin","aria-valuemax","App","lg","md","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7b69d2e0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Red({color}) {\r\n    return (\r\n        <div className=\"dot\" style={{backgroundColor:`${color}`}}>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Red\r\n","import React from \"react\";\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBCard, MDBRow, MDBCol } from \"mdbreact\";\r\nimport Red from './Red';\r\nfunction Deadlines() {\r\n  const state = [\r\n    {\r\n      overdue: 1,\r\n      Task: \"Update facebook profile\",\r\n      Deadline: \"2017 - 08 - 15\",\r\n      employee: \"Paula\",\r\n    },\r\n    {\r\n      overdue: 4,\r\n      Task: \"Update testing plan\",\r\n      Deadline: \"2017 - 08 - 15\",\r\n      employee: \"Kate\",\r\n    },\r\n    {\r\n      overdue: 10,\r\n      Task: \"configure desktop\",\r\n      Deadline: \"2017 - 08 - 15\",\r\n      employee: \"Nancy\",\r\n    },\r\n    {\r\n      overdue: 24,\r\n      Task: \"Set up new database\",\r\n      Deadline: \"2017 - 08 - 15\",\r\n      employee: \"Kate\",\r\n    },\r\n  ];\r\n\r\n  \r\n\r\n  return (\r\n    <MDBCard>\r\n      <MDBCol className=\"pt-3\">\r\n        <MDBRow center className=\"cardTitle\">\r\n          Overdue Tasks\r\n        </MDBRow>\r\n      </MDBCol>\r\n      <div className=\"p-3\">\r\n        <MDBTable responsive>\r\n          <MDBTableHead color=\"grey\" textWhite>\r\n            <tr>\r\n              <th>Overdue</th>\r\n              <th>Task</th>\r\n              <th>Deadline</th>\r\n              <th>Employee</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n          <MDBTableBody>\r\n            {state.map((em) => (\r\n              <tr>\r\n                <td\r\n                  style={{\r\n                    color:\r\n                      em.overdue < 9 ? \"rgb(239, 221, 86)\" : \"rgb(221, 75, 75)\",\r\n                  }}\r\n                >\r\n                  {em.overdue < 9 ? (\r\n                    <Red color=\"yellow\" />\r\n                  ) : (\r\n                    <Red color=\"red\" />\r\n                  )}\r\n                  {em.overdue} Days\r\n                </td>\r\n                <td>{em.Task}</td>\r\n                <td>{em.Deadline}</td>\r\n                <td>{em.employee}</td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBCard>\r\n  );\r\n}\r\n\r\nexport default Deadlines;\r\n","import React from \"react\";\r\nimport { MDBCard } from \"mdbreact\";\r\nimport { Bar, Line } from \"react-chartjs-2\";\r\nimport \"./handle.css\";\r\nfunction Handle() {\r\n  const state = {\r\n    labels: [\r\n      \"Andrew W.\",\r\n      \"John S.\",\r\n      \"Max A.\",\r\n      \"Sophie T.\",\r\n      \"Steven R.\",\r\n      \"Thomas P.\",\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: \"Performance\",\r\n        backgroundColor: \"#44AF6A\",\r\n        borderColor: \"none\",\r\n        borderWidth: 2,\r\n        data: [92, 98, 91, 95, 97, 80],\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div>\r\n      <MDBCard>\r\n        <div style={{ padding: \"25px\" }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignContent: \"center\",\r\n            }}\r\n          >\r\n            <p style={{ fontWeight: \"bold\", fontSize: \"larger\" }}>\r\n              Accuracy of Estimations\r\n            </p>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              marginTop: \"10px\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n          >\r\n            <div className=\"dbtn-container\">\r\n              <div className=\"dbtn\">\r\n                <div className=\"dbtn-inner\">92%</div>\r\n              </div>\r\n              <div>\r\n                <strong>by Developer</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <Bar\r\n              data={state}\r\n              options={{\r\n                plugins: {\r\n                  datalabels: {\r\n                    align: \"start\",\r\n                    color:\"white\",\r\n                    anchor: \"end\",\r\n                  },\r\n                  anchor: \"end\",\r\n                },\r\n                title: {\r\n                  display: false,\r\n                  text: \"Avg Handle Time(in Days) For Project Tasks\",\r\n                  fontSize: 20,\r\n                },\r\n                legend: {\r\n                  display: true,\r\n                  position: \"bottom\",\r\n                  boxWidth: 80,\r\n                },\r\n\r\n                scales: {\r\n                  xAxes: [\r\n                    {\r\n                      barPercentage: 1.0,\r\n                      categoryPercentage: 0.5,\r\n                      gridLines: {\r\n                        display: false,\r\n                      },\r\n                    },\r\n                  ],\r\n                  yAxes: [\r\n                    {\r\n                     \r\n                      gridLines: {\r\n                        display: false,\r\n                      },\r\n                      ticks: {\r\n                        display: false,\r\n                        beginAtZero: true,\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </MDBCard>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Handle;\r\n","import React from \"react\";\r\nimport { MDBCard } from \"mdbreact\";\r\nimport { Bar, Line } from \"react-chartjs-2\";\r\nimport \"./handle.css\";\r\nfunction Handle() {\r\n  const state = {\r\n    labels: [\"john\", \"nancy\", \"karol\", \"mali\", \"jason\"],\r\n    datasets: [\r\n      {\r\n        label: \"Performance\",\r\n        backgroundColor: \"#44AF6A\",\r\n        borderColor: \"none\",\r\n        borderWidth: 2,\r\n        data: [5.3, 4.7, 3.7, 8.1, 5.6],\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div style={{}}>\r\n      <MDBCard>\r\n        <div style={{ padding: \"25px\" }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignContent: \"center\",\r\n            }}\r\n          >\r\n            <p className=\"legend\">Average Handle Time(In days)</p>\r\n          </div>\r\n          <div>\r\n            <Bar\r\n              data={state}\r\n              options={{\r\n                maintainAspectRatio: false,\r\n                clip: false,\r\n                plugins: {\r\n                  datalabels: {\r\n                    clip: false,\r\n                    display: true,\r\n                    align: \"start\",\r\n                    color:\"white\",\r\n                    anchor: \"end\",\r\n                  },\r\n                  anchor: \"end\",\r\n                },\r\n                title: {\r\n                  display: false,\r\n                  text: \"Avg Handle Time(in Days) For Project Tasks\",\r\n                  fontSize: 20,\r\n                },\r\n                legend: {\r\n                  display: false,\r\n                  position: \"right\",\r\n                  boxWidth: 80,\r\n                },\r\n\r\n                scales: {\r\n                  xAxes: [\r\n                    {\r\n                      barPercentage: 1.0,\r\n                      categoryPercentage: 0.5,\r\n                      gridLines: {\r\n                        display: false,\r\n                      },\r\n                    },\r\n                  ],\r\n                  yAxes: [\r\n                    {\r\n                      ticks: {\r\n                        display: false,\r\n                        beginAtZero: true,\r\n                      },\r\n                      gridLines: {\r\n                        display: false,\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n              }}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              marginTop: \"25px\",\r\n            }}\r\n          >\r\n            <div>\r\n              <img\r\n                style={{ height: \"55px\", width: \"55px\" }}\r\n                src=\"./../historyicon.svg\"\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                marginLeft: \"50px\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  fontSize: \"xx-large\",\r\n                  fontWeight: \"bold\",\r\n                  color: \"#a5a5a5\",\r\n                }}\r\n              >\r\n                5.6 days\r\n              </div>\r\n              <div style={{ color: \"#a5a5a5\" }}>Overall Average Time</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </MDBCard>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Handle;\r\n","import React from \"react\";\r\nimport { MDBCard, MDBCol, MDBRow } from \"mdbreact\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nfunction Pddt() {\r\n\r\n  const state = {\r\n    Planning: \"Completed\",\r\n    Design: \"Completed\",\r\n    Development: 68,\r\n    Testing: \"waiting\"\r\n  }\r\n\r\n  return (\r\n    <MDBCard>\r\n      <MDBRow className=\"p-2\">\r\n        <MDBCol>\r\n          <MDBRow center style={{ fontSize: \"large\", fontWeight: \"bold\" }}>\r\n            Planning\r\n          </MDBRow>\r\n          <MDBRow className=\"pt-2\" center>\r\n            <img\r\n              style={{ height: \"50px\", width: \"50px\" }}\r\n              src={\r\n                state.Planning == \"Completed\"\r\n                  ? \"./tick.svg\"\r\n                  : \"./clockicon.svg\"\r\n              }\r\n            />\r\n          </MDBRow>\r\n          <MDBRow center className=\"text-align-center\">\r\n            {state.Planning}\r\n          </MDBRow>\r\n        </MDBCol>\r\n\r\n        <MDBCol>\r\n          <MDBRow center style={{ fontSize: \"large\", fontWeight: \"bold\" }}>\r\n            Design\r\n          </MDBRow>\r\n\r\n          <MDBRow className=\"pt-2\" center>\r\n            <img\r\n              style={{ height: \"50px\", width: \"50px\" }}\r\n              src={state.Design == 100 ? \"./tick.svg\" : \"./clockicon.svg\"}\r\n            />\r\n          </MDBRow>\r\n          <MDBRow center className=\"text-align-center\">\r\n            Completed\r\n          </MDBRow>\r\n        </MDBCol>\r\n\r\n        <MDBCol\r\n          center\r\n          className=\"align-items-center d-flex\"\r\n          style={{ flexDirection: \"column\" }}\r\n        >\r\n          <MDBRow center style={{ fontSize: \"large\", fontWeight: \"bold\" }}>\r\n            development\r\n          </MDBRow>\r\n          <MDBRow\r\n            center\r\n            className=\"p-2\"\r\n            style={{ height: \"60px\", width: \"60px\" }}\r\n          >\r\n            <CircularProgressbar\r\n              strokeWidth={20}\r\n              value={state.Development}\r\n              text={`${state.Development}%`}\r\n              styles={buildStyles({\r\n                rotation: 0.25,\r\n                strokeLinecap: \"butt\",\r\n                textSize: \"26px\",\r\n                pathTransitionDuration: 0.5,\r\n                trailColor: \"#d6d6d6\",\r\n                pathColor: `#44AF6A`,\r\n                textColor: \"green\",\r\n                backgroundColor: \"#3e98c7\",\r\n              })}\r\n            />\r\n          </MDBRow>\r\n          <MDBRow center>\r\n            <p>In progress</p>\r\n          </MDBRow>\r\n        </MDBCol>\r\n        <MDBCol center>\r\n          <MDBRow center style={{ fontSize: \"large\", fontWeight: \"bold\" }}>\r\n            Testing\r\n          </MDBRow>\r\n          <MDBRow center className=\"p-2\">\r\n            <img\r\n              style={{ height: \"50px\", width: \"50px\" }}\r\n              src={\r\n                state.Testing == \"Completed\"\r\n                  ? \"./tick.svg\"\r\n                  : \"./clockicon.svg\"\r\n              }\r\n            />\r\n          </MDBRow>\r\n          <MDBRow center>waiting</MDBRow>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBCard>\r\n  );\r\n}\r\n\r\nexport default Pddt;\r\n","import React from \"react\";\r\nimport { MDBCard } from \"mdbreact\";\r\nimport { Bar, Line } from \"react-chartjs-2\";\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\nimport \"./handle.css\";\r\nfunction Handle() {\r\n\r\n  \r\n  const state = {\r\n    labels: [\r\n      \"week1\",\r\n      \"week2\",\r\n      \"week3\",\r\n      \"week4\",\r\n      \"week5\",\r\n      \"week6\",\r\n      \"week7\",\r\n      \"week8\",\r\n      \"week9\",\r\n      \"week10\",\r\n      \"week11\",\r\n      \"week12\",\r\n    ],\r\n    datasets: [\r\n      {\r\n        fillColor:\"black\",\r\n        label: \"Performance\",\r\n        backgroundColor: \"rgba(0,0,0,0)\",\r\n        opacity: \"0.4\",\r\n        borderColor: \"#44AF6A\",\r\n        borderWidth: 2, \r\n        data: [29, 47, 42, 40, 27, 83, 41, 57, 61, 42, 75, 68],\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div style={{}}>\r\n      <MDBCard>\r\n        <div style={{ padding : \"25px\" }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignContent: \"center\",\r\n            }}\r\n          >\r\n            <p className=\"cardTitle\">\r\n              Reopened Tickets\r\n            </p>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              marginTop: \"10px\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n          >\r\n            <div className=\"dbtn-container\">\r\n              <div>Reopened Tickets</div>\r\n              <div className=\"dbtn\">\r\n                <div className=\"dbtn-inner\">38</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"dbtn-container\">\r\n              <div>Reopened Tickets(%)</div>\r\n              <div className=\"dbtn\">\r\n                <div className=\"dbtn-inner\">2.8%</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"dbtn-container\">\r\n              <div>vs Last Month</div>\r\n              <div className=\"dbtn\">\r\n                <div className=\"dbtn-inner\">-0.5%</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div style={{ marginTop: \"10px\" }}>\r\n            <Line\r\n              data={state}\r\n              options={{\r\n                plugins: {\r\n                  datalabels: {\r\n                    align: \"top\",\r\n                  },\r\n                },\r\n                title: {\r\n                  display: false,\r\n                  text: \"Avg Handle Time(in Days) For Project Tasks\",\r\n                  fontSize: 20,\r\n                },\r\n                legend: {\r\n                  display: false,\r\n                  position: \"right\",\r\n                  boxWidth: 80,\r\n                },\r\n\r\n                scales: {\r\n                  xAxes: [\r\n                    {\r\n                      barPercentage: 1.0,\r\n                      categoryPercentage: 0.5,\r\n                      gridLines: {\r\n                        display: false,\r\n                      },\r\n                    },\r\n                  ],\r\n                  yAxes: [\r\n                    {\r\n                      scaleLabel: false,\r\n                      ticks: {\r\n                        display: false,\r\n\r\n                        beginAtZero: true,\r\n                      },\r\n                      gridLines: {\r\n                        display: false,\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </MDBCard>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Handle;\r\n","import React from \"react\";\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBCard, MDBCol, MDBRow } from \"mdbreact\";\r\nimport { HorizontalBar } from \"react-chartjs-2\"\r\nfunction Deadlines() {\r\n\r\n  const state = [\r\n    {\r\n      employee: \"kate\",\r\n      Task: \"Update twitter profile\",\r\n      Deadline: \"2017 - 08 - 15\",\r\n      Workload: 34,\r\n    },\r\n    {\r\n      employee: \"Georg\",\r\n      Task: \"\",\r\n      Deadline: \"2017 - 08 - 15\",\r\n      Workload: 25,\r\n    },\r\n    {\r\n      employee: \"kate\",\r\n      Task: \"Update twitter profile\",\r\n      Deadline: \"2017 - 08 - 15\",\r\n      Workload: 75,\r\n    },\r\n    {\r\n      employee: \"kate\",\r\n      Task: \"Update twitter profile\",\r\n      Deadline: \"2017 - 08 - 15\",\r\n      Workload: 68,\r\n    },\r\n    ];\r\n    \r\n    \r\n\r\n  return (\r\n    <MDBCard>\r\n      <MDBCol className=\"pt-3\">\r\n        <MDBRow center className=\"cardTitle\">\r\n          Upcoming Deadlines\r\n        </MDBRow>\r\n      </MDBCol>\r\n      <div className=\"p-3\">\r\n        <MDBTable responsive>\r\n          <MDBTableHead color=\"grey\" textWhite>\r\n            <tr>\r\n              <th>Employee</th>\r\n              <th>Task</th>\r\n              <th>Deadline</th>\r\n              <th>Workload</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n          <MDBTableBody>\r\n            {state.map((em) => (\r\n              <tr>\r\n                <td>{em.employee}</td>\r\n                <td>{em.Task}</td>\r\n                <td>{em.Deadline}</td>\r\n                <td>\r\n                  <div class=\"progress\">\r\n                    <div\r\n                      class=\"progress-bar bg-success\"\r\n                      role=\"progressbar\"\r\n                      style={{ width: `${em.Workload}%` }}\r\n                      aria-valuenow=\"25\"\r\n                      aria-valuemin=\"0\"\r\n                      aria-valuemax=\"100\"\r\n                    >\r\n                      {em.Workload}%\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBCard>\r\n  );\r\n}\r\n\r\nexport default Deadlines;\r\n","import React from \"react\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport Overdue from \"./components/overdue\"\nimport Estimates from './components/estimates'\nimport Reopendedtickets from \"./components/reopenedtickets\";\nimport Pddt from \"./components/pddt\";\nimport { MDBCol, MDBRow } from \"mdbreact\";\nimport Handle from \"./components/handle\";\nimport Deadlines from \"./components/Deadlines\";\nimport \"./App.css\";\nimport \"./utils.css\"\nfunction App() {\n  return (\n    <MDBRow center>\n      <MDBCol center className=\"mt-3\" lg={10}>\n        <MDBRow lg={12} className=\"mb-2\">\n          <MDBCol md={12}>\n            <Pddt />\n          </MDBCol>\n        </MDBRow>\n        <MDBRow>\n          <MDBCol md={6} className=\"mt-3\">\n            <Estimates />\n          </MDBCol>\n\n          <MDBCol md={6} className=\"mt-3\">\n            <Handle />\n          </MDBCol>\n        </MDBRow>\n        <MDBRow>\n          <MDBCol md={6} className=\"mt-3\">\n            <Reopendedtickets />\n          </MDBCol>\n\n          <MDBCol md={6} className=\"mt-3\">\n            <Deadlines />\n          </MDBCol>\n        </MDBRow>\n        <MDBRow center className=\"mt-3\">\n          <MDBCol center>\n            <Overdue />\n          </MDBCol>\n        </MDBRow>\n      </MDBCol>\n    </MDBRow>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}